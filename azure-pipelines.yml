pool:
   vmImage: 'macOS-latest'
   
trigger:
  branches:
    include:
      - develop

pr:
  branches:
    include:
      - '*'

variables:
  coveragePath: './test-reports/'

steps:
- script: |
    sudo xcode-select -switch /Applications/Xcode_12.4.app
    fastlane prepare
  env:
    GITHUB_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN)   
  displayName: "Setup environment"

- script: |
    fastlane build build_number:0 \
                     build_type:Development \
                     configuration:Debug \
                     for_simulator:true
  displayName: "Build"

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: "build"
    artifactName: "Build logs"
  condition: succeededOrFailed()
  displayName: "Store build log"

- script: |
    fastlane test
  displayName: "Test"

- script: gem install slather
  displayName: 'Install Slather'

- script: |
    slather coverage
  displayName: "Run Slather to convert Code Coverage report to Cobertura XML format"

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(coveragePath)/cobertura.xml'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'test/*.junit'
  condition: succeededOrFailed()
  displayName: "Publish test results"

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: "SnapshotResults"
    artifactName: "Snapshot failures"
  condition: failed()
  displayName: "Store failed snapshots"

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: "test"
    artifactName: "Test logs"
  condition: succeededOrFailed()
  displayName: "Store test log"

- script: |
    fastlane post_test
  env:  
    DEPENDENCIES_BASE_URL: "https://raw.githubusercontent.com/wireapp/wire-ios-shared-resources/master"
    GITHUB_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN)   
  displayName: "Post Test"
