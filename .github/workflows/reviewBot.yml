name: review PR by Zenkins v0.1.3

on: 
  issue_comment:
    types: [created]
jobs:
  review:
    runs-on: ubuntu-latest

    env:
      ADMINS: ('billypchan' 'marcoconti83' 'typfel' 'johnxnguyen' 'David-Henner' 'KaterinaWire' 'sb88k' 'agisilaos')

    steps:
      - name: guard for magic spell
        if: ${{ github.event.comment.body != '@zenkins review' }}
        run: exit 1

      - name: guard for pull requests
        if: ${{ !github.event.issue.pull_request }}
        run: exit 1

      - name: guard for title
        if: ${{ !(startsWith(github.event.issue.title, 'chore') && endsWith(github.event.issue.title, 'bump components SQPIT-776')) }}
        run: |
          echo "github: ${{ github }}"
          echo "title not match. Exit. Title is ${{ github.event.issue.title }}"
          exit 1

      - name: guard for admins
        run: |
          admins=${{ env.ADMINS }}
          adminFound=0
          for admin in ${admins[*]}
          do
            if [[ "$admin" == "${{ github.actor }}" ]]; then
              echo ${{ github.actor }} is allowed for releasing
              adminFound=1
            fi
          done
          if [ $adminFound = 0 ]; then
            echo ${{ github.actor }} is not allowed for releasing
            exit 1
          fi
          
      - name: checkout
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0 # Required due to the weg Git works, without it this action won't be able to find any or the correct tags
          ref: ${{ github.event.issue.head.sha }}

#       - name: Checkout Pull Request
#         env:
#           GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
#         run: |
#           hub pr checkout ${{ github.event.issue.number }}

      - name: Git Diff
        id: gitDiff
        run: |          
          echo "::set-output name=changedFiles::`$(git diff --name-only origin/develop HEAD)`"

      - name: Changed Files in this PR
        run: | 
          echo -e ${{ steps.gitDiff.outputs.changedFiles }}
    
      - name: Review bump components PR
#         env:
#           GITHUB_TOKEN: ${{ secrets.ZENKINS_TOKEN }}
        run: |
          # auth with zenkins to prevent self approval not allowed issue
          # TODO: guard for Cartfile is not empty
          echo ${{ secrets.ZENKINS_TOKEN }} > .githubtoken
          gh auth login --with-token < .githubtoken
          gh pr review ${{ github.event.issue.number }} --approve -R wireapp/wire-ios-request-strategy
          rm .githubtoken
